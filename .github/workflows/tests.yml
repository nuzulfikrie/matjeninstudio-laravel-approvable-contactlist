name: Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  tests:
    name: PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - '8.4'
        dependency-version:
          - prefer-stable
        include:
          - php: '8.4'
            test-coverage: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, redis, memcached
          coverage: ${{ matrix.test-coverage && 'xdebug' || 'none' }}

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: ${{ matrix.dependency-version }}

      - name: List Installed Dependencies
        run: composer show -D

      - name: Run PestPHP Tests
        run: vendor/bin/pest --colors=always

      - name: Run PestPHP Tests with Coverage
        if: matrix.test-coverage
        run: vendor/bin/pest --coverage --min=40
        env:
          XDEBUG_MODE: coverage

      - name: Upload Coverage to Codecov
        if: matrix.test-coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  static-analysis:
    name: Static Analysis (PHPStan)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run PHPStan
        run: composer analyse

  code-style:
    name: Code Style (Laravel Pint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run Laravel Pint
        run: composer format -- --test

  architecture:
    name: Architecture Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run Architecture Tests
        run: composer test-arch

